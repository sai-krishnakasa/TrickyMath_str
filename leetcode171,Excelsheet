Problem statement:
Given a string columnTitle that represents the column title as appear in an Excel sheet, return its corresponding column number.

For example:

A -> 1
B -> 2
C -> 3
...
Z -> 26
AA -> 27
AB -> 28 
...
 

Example 1:

Input: columnTitle = "A"
Output: 1
Example 2:

Input: columnTitle = "AB"
Output: 28
Example 3:

Input: columnTitle = "ZY"
Output: 701
 

Constraints:

1 <= columnTitle.length <= 7
columnTitle consists only of uppercase English letters.
columnTitle is in the range ["A", "FXSHRXW"].

Solution:
Essentially, what we asked to do here is to convert a number in the base 26 numeral system to a decimal number. 
This is a standard algorithm, where we iterate over the digits from right to left and multiply them by the base to the power of
the position of the digit. To translate a letter to a number we use the Python method ord which returns the Unicode code of the letter.
By subtracting the code by 64, we can map letters to the numbers from 1 to 26.

class Solution:
    def titleToNumber(self, columnTitle: str) -> int:
        ans,pos=0,0
        for i in reversed(columnTitle):
            digit=ord(i)-64
            ans+=digit*26**pos
            pos+=1
        return ans
        
